local player = game.Players.LocalPlayer
while not player.Character or not player.Character:FindFirstChild("Humanoid") do
    wait()
end

local humanoid = player.character:WaitForChild("Humanoid")

if _G.EvoEnvFly == nil then
	_G.EvoEnvFly = true

	local mouse = game.Players.LocalPlayer:GetMouse()
	local torso = game.Players.LocalPlayer.Character.HumanoidRootPart
	local dir = {w = 0, s = 0, a = 0, d = 0}
	local spd = 2

	mouse.KeyDown:Connect(function(key)
    	if key:lower() == "w" then
        	dir.w = 1
    	elseif key:lower() == "s" then
        	dir.s = 1
    	elseif key:lower() == "a" then
        	dir.a = 1
    	elseif key:lower() == "d" then
        	dir.d = 1
    	end
	end)

	mouse.KeyUp:Connect(function(key)
    	if key:lower() == "w" then
    	    dir.w = 0
    	elseif key:lower() == "s" then
        	dir.s = 0
    	elseif key:lower() == "a" then
        	dir.a = 0
    	elseif key:lower() == "d" then
        	dir.d = 0
    	end
	end)

	local function updateMovement()
    	if _G.EvoEnvFly then
        	torso.Anchored = true
        	pcall(function() humanoid.PlatformStand = true end) 
        	torso.CFrame = CFrame.new(torso.Position, game.Workspace.CurrentCamera.CFrame.p) * CFrame.Angles(0, math.rad(180), 0) * CFrame.new((dir.d - dir.a) * spd, 0, (dir.s - dir.w) * spd)
    	end
	end

	game:GetService("RunService").RenderStepped:Connect(updateMovement)

	
else
	local torso = game.Players.LocalPlayer.Character.HumanoidRootPart
	humanoid.PlatformStand = false
    torso.Anchored = false
	_G.EvoEnvFly = nil
end